version: '3'

services:
  postgres:
    image: postgres:11.6
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=expertonica
      - POSTGRES_USER=expertonica
      - POSTGRES_DB=expertonica

  rabbitmq:
    image: rabbitmq:3.8.1-management
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_USERNAME=guest

  redis:
    image: redis:latest
#    ports:
#      - "6380:6379"

  back:
    restart: always
    environment:
      - DJANGO_SECRET_KEY=local
      - DB_HOST=postgres
      - DB_USER=expertonica
      - DB_NAME=expertonica
      - CELERY_REDIS_HOST=redis
      - CELERY_REDIS_PORT=6379
    build: ./
    command: >
      bash -c "./docker-entrypoint.sh"
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - rabbitmq

  celery:
    restart: always
    environment:
      - CONTAINER_TYPE=CELERY
      - DJANGO_SECRET_KEY=local
      - DB_HOST=postgres
      - DB_USER=expertonica
      - DB_NAME=expertonica
      - RABBIT_PROTOCOL=amqp
      - RABBIT_HOST=rabbitmq
      - RABBIT_USER=guest
      - RABBIT_PASSWORD=guest
      - RABBIT_PORT=5672
      - CELERY_REDIS_HOST=redis
      - CELERY_REDIS_PORT=6379
    build: ./
    command: >
      bash -c "./docker-entrypoint.sh"
    volumes:
      - ./:/app
    depends_on:
      - postgres
      - redis
      - rabbitmq